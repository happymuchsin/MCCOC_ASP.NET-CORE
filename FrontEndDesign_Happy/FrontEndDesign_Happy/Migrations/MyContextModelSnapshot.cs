// <auto-generated />
using System;
using FrontEndDesign_Happy.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FrontEndDesign_Happy.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Buyer");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Category");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("receiptId");

                    b.HasKey("Id");

                    b.HasIndex("receiptId");

                    b.ToTable("TB_M_Checkout");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("Stock");

                    b.Property<int?>("categoryId");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.ToTable("TB_M_Item");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<int>("Quantity");

                    b.Property<int>("TotalPrice");

                    b.Property<int?>("buyerId");

                    b.Property<int?>("itemId");

                    b.HasKey("Id");

                    b.HasIndex("buyerId");

                    b.HasIndex("itemId");

                    b.ToTable("TB_M_Receipt");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Checkout", b =>
                {
                    b.HasOne("FrontEndDesign_Happy.Models.Receipt", "receipt")
                        .WithMany()
                        .HasForeignKey("receiptId");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Item", b =>
                {
                    b.HasOne("FrontEndDesign_Happy.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId");
                });

            modelBuilder.Entity("FrontEndDesign_Happy.Models.Receipt", b =>
                {
                    b.HasOne("FrontEndDesign_Happy.Models.Buyer", "buyer")
                        .WithMany()
                        .HasForeignKey("buyerId");

                    b.HasOne("FrontEndDesign_Happy.Models.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemId");
                });
#pragma warning restore 612, 618
        }
    }
}
